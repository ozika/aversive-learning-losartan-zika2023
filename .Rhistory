here::i_am(".losartan_hidden_root")
here::here()
# renv::init()
renv::activate(here::here(""))
dir.create(here::here("output/figures/"))
data_dir = here::here('data')
utils_dir = here::here('utils' )
figures_dir = here::here('output/figures' )
adjustment_method ="holm"
#library(devtools)
#devtools::install_github("mattelisi/mlisi")
#devtools::install_github("mattelisi/bmsR")
#required_packages = c("reshape2",  "purrr", "ggpubr", "corrplot", "ggplot2", "ggsignif", "parameters", "extdplyr", "Jmisc", "PupillometryR",  "plyr", "lme4", "lmerTest", "emmeans", #"tidyr", "ggpubr", "corrplot", "patchwork", "broom", "plotrix", "PupillometryR","glmmTMB", "Hmisc", "boot", "data.table", "devtools", "bmsR", "performance", "extdplyr", "sjmisc")
#lapply(required_packages, library, character.only = TRUE)
required_packages = c("reshape2", "sjmisc", "sjPlot", "purrr", "ggpubr", "corrplot", "dplyr","ggplot2", "ggsignif", "parameters", "extdplyr", "Jmisc", "PupillometryR",  "plyr", "lme4", "lmerTest", "emmeans", "tidyr", "ggpubr", "corrplot", "patchwork", "broom", "plotrix", "PupillometryR","glmmTMB", "Hmisc", "boot", "data.table", "devtools", "bmsR", "performance", "rstan", "dplyr", "utils", "loo", "jtools", "heplots", "effectsize")
#pacman::p_load(char = required_packages)
invisible(lapply(required_packages, require, character.only = TRUE))
source(here::here("..","..", "shared_functions", "r", "r_functions.R"))
pal <- get_colors("ond")
emm_options(pbkrtest.limit = 5000)
run_descriptives <- function(df, vec) {
sdf <- df[, append("drug_str", vec)]
for (i in as.character(vec)) {
tsdf = sdf %>%
group_by(drug_str) %>%
summarise_at(i, funs(mean,sd),na.rm = TRUE)
tsdf$varname <- i
print(tsdf)
}
pvals <- sdf %>%
summarise_each(funs(t.test(.[drug_str == "losartan"], .[drug_str == "placebo"])$p.value), vars =  vec)
tscores <- sdf %>%
summarise_each(funs(t.test(.[drug_str == "losartan"], .[drug_str == "placebo"])$statistic), vars =  vec)
dfs <- sdf %>%
summarise_each(funs(t.test(.[drug_str == "losartan"], .[drug_str == "placebo"])$parameter), vars =  vec)
stats <- rbind(pvals, tscores, dfs, vec)
stats <- data.table::transpose(stats)
colnames(stats) <- c("p", "t", "df", "variable")
print(stats)
}
data<-read.csv(here::here(data_dir,  "full_beh_dataset_p3.csv"))
fields <- c("visit", "rev_type_4plot_swchp", "drug", "outcome", "id", "trno_swchp")
data<- assign_var_types(data, fields)
data<-data[which(data$Trial_Type %in% 3),]
data<-data[which(data$trno_swchp %in% c(seq(-5, -1), seq(1,15))),]
data<-data[which(data$rev_type_4plot_swchp %in% c("acq","ext")),]
## This step is important for PLOTTING - it weights participants equally
df = data %>%
dplyr::group_by(trno_swchp, id, drug_str, visit_str, rev_type_4plot_swchp) %>%
summarise_at("prob", mean, na.rm = TRUE)
df = df %>%
group_by(trno_swchp, drug_str, visit_str, rev_type_4plot_swchp) %>%
summarise_at("prob", funs(mean,std.error),na.rm = TRUE)
df$lower = df$mean - df$std.error
df$upper = df$mean + df$std.error
pal <- get_colors("ond")
g <- ggplot(data = df, aes(y = mean, x = trno_swchp, fill=interaction(rev_type_4plot_swchp, drug_str))) +
geom_vline(xintercept=0, linetype="dashed") +
geom_line(size=1.5, show.legend = TRUE) +
geom_ribbon(aes(ymin=lower, ymax=upper),  na.rm = TRUE,alpha=0.6,show.legend = TRUE) +
scale_fill_manual(values = pal[c(1,2,3,4)], name = "", labels = c("High Threat: Losartan", "Low Threat: Losartan", "High Threat: Placebo", "Low Threat: Placebo")) +
scale_color_manual(values = pal[c(1,2,3,4)]) +
ylim(0,1) +
scale_x_continuous(breaks = c(-5, -1, 1, 5, 10), limits=c(-5,10)) +
theme_bw() +
labs(y= "Rating", x="Trial (locked to estimated switchpoint)")  +
ggtitle("Participant data") +
raincloud_theme   +
facet_grid(cols=vars(visit_str))
g
erdf <- df
ggsave(here::here(figures_dir, "Figure2a_raw.pdf"), width = 10, height = 4, dpi = 120)
data<-read.csv(here::here(data_dir,  "full_beh_dataset_p3.csv"))
fields <- c("visit", "rev_type_4plot_swchp", "drug", "outcome", "id")
data<- assign_var_types(data, fields)
data<-data[which(data$Trial_Type %in% 3),]
data<-data[which(data$trno_swchp %in% c(seq(-5, -1), seq(1,15))),]
data<-data[which(data$rev_type_4plot_swchp %in% c("acq","ext")),]
## This step is important for PLOTTING - it weights participants equally
df = data %>%
dplyr::group_by(trno_swchp, id, drug_str, visit_str, rev_type_4plot_swchp) %>%
summarise_at("prob", mean, na.rm = TRUE)
df = df %>%
group_by(trno_swchp, drug_str, visit_str, rev_type_4plot_swchp) %>%
summarise_at("prob", funs(mean,std.error),na.rm = TRUE)
df$lower = df$mean - df$std.error
df$upper = df$mean + df$std.error
pal <- get_colors("ond")
g <- ggplot(data = df, aes(y = mean, x = trno_swchp, fill=interaction(rev_type_4plot_swchp, drug_str))) +
geom_vline(xintercept=0, linetype="dashed") +
geom_line(size=1.5, show.legend = TRUE) +
geom_ribbon(aes(ymin=lower, ymax=upper),  na.rm = TRUE,alpha=0.6,show.legend = TRUE) +
scale_fill_manual(values = pal[c(1,2,3,4)], name = "", labels = c("High Threat: Losartan", "Low Threat: Losartan", "High Threat: Placebo", "Low Threat: Placebo")) +
scale_color_manual(values = pal[c(1,2,3,4)]) +
ylim(0,1) +
scale_x_continuous(breaks = c(-5, -1, 1, 5, 10), limits=c(-5,10)) +
theme_bw() +
labs(y= "Rating", x="Trial (locked to estimated switchpoint)")  +
ggtitle("Participant data") +
raincloud_theme   +
facet_grid(cols=vars(visit_str))
g
erdf <- df
ggsave(here::here(figures_dir, "Figure2a_raw.pdf"), width = 10, height = 4, dpi = 120)
data<-read.csv(here::here(data_dir,  "full_beh_dataset_p3.csv"))
fields <- c("visit", "rev_type_4plot_swchp", "drug", "outcome", "id", "prepost", "sb", "trno_swchp")
data<- assign_var_types(data, fields)
data<-read.csv(here::here(data_dir,  "full_beh_dataset_p3.csv"))
data<-data[which(data$Trial_Type %in% 3),]
data<-data[which(data$trno_swchp %in% c(seq(-5, -1), seq(5,15))),]
data<-data[which(data$rev_type_4plot_swchp %in% c("acq","ext")),]
data <- data %>% mutate(prepost =
case_when(trno_swchp %in% seq(-3,-1) ~ "pre",
trno_swchp %in% seq(5, 15) ~ "post"), na.rm = TRUE)
data<-data[which(data$prepost %in% c("pre","post")),]
fields <- c("visit", "rev_type_4plot_swchp", "drug", "outcome", "id", "prepost", "sb", "trno_swchp")
data<- assign_var_types(data, fields)
### Get baseline for each reversal
dfbase <- data[data$prepost %in% "pre", c("prob", "prepost", "id", "rev_id_swchp", "drug_str", "visit_str", "rev_type_4plot_swchp", "sb")]
dfbase = dfbase %>%
group_by(id, rev_id_swchp, drug_str, visit_str, rev_type_4plot_swchp, sb) %>%
summarise_at("prob", mean, na.rm = TRUE)
dfbase$prob_baseline <- dfbase$prob
dfbase <- dfbase[,c("id", "visit_str", "rev_id_swchp", "prob_baseline")]
### Get summarized data and append base
df <- data[, c("prob", "prepost", "id", "rev_id_swchp", "drug_str", "visit_str", "trno_swchp", "rev_type_4plot_swchp", "sb")]
df = df[data$prepost %in% "post",]
df <- base::merge(df, dfbase, by=c("id", "visit_str", "rev_id_swchp"))
### Subtract baseline
df$probchange <- df$prob - df$prob_baseline
## Add approx true prob
i <- 1
lvls <- c(0.75, 0.25)
for (ph in c("acq", "ext" )) {
df$truechange[df$rev_type_4plot_swchp %in% ph] <- lvls[i] - df$prob_baseline[df$rev_type_4plot_swchp %in% ph]
i <- i + 1
}
##### STATS ########################################################################
m <- lmer(data=df, probchange ~ drug_str*visit_str*rev_type_4plot_swchp + (1|sb) + (1|id))
anova(m)
effectsize::effectsize(anova(m), type="eta", alternative="two.sided")
df$model_pred <- predict(m) # for plotting
## POST-HOCS
#main eff phase
em2<-emmeans(m, pairwise ~ rev_type_4plot_swchp, adjust=adjustment_method)
em2
em <- emmeans(m, ~ visit_str | drug_str/rev_type_4plot_swchp, adjust=adjustment_method)
em
pairs(em, adjust=adjustment_method)
pairs(pairs(emmeans::regrid(em)), by = NULL)
# differnces on each visit
em <- emmeans(m, ~ drug_str | rev_type_4plot_swchp /visit_str)
pairs(em, adjust=adjustment_method)
pairs(pairs(emmeans::regrid(em)), by = NULL)
#contrast of contrasts: is the (los-plac) difference between acq and ext significant?
# (losartan - placebo acq v1) - (losartan - placebo ext v1)  -0.0444 0.0303  6.05  -1.465  0.6953
# (losartan - placebo acq v2) - (losartan - placebo ext v2)  -0.1624 0.0208  3.02  -7.820  0.0202
# (losartan - placebo acq v3) - (losartan - placebo ext v3)  -0.2080 0.0308  4.45  -6.746  0.0107
#em <-  emmeans(m, pairwise ~ drug_str *rev_type_4plot_swchp * visit_str, adjust=adjustment_method)
em <- emmeans(m, specs = ~ drug_str * visit_str * rev_type_4plot_swchp)
em
### add to paper
lincombs <- contrast(em,
list(v2_v1_drug_acq=c(-1,0,1,0,0,0,0,0,0,0,0,0),
v2_v1_drug_ext=c(0,0,0,0,0,0,-1,0,1,0,0,0),
v2_v1_plac_acq=c(0,-1,0,1,0,0,0,0,0,0,0,0),
v2_v1_plac_ext=c(0,0,0,0,0,0,0,-1,0,1,0,0),
v3_v1_drug_acq=c(-1,0,0,0,1,0,0,0,0,0,0,0),
v3_v1_drug_ext=c(0,0,0,0,0,0,-1,0,0,0,1,0),
v3_v1_plac_acq=c(0,-1,0,0,0,1,0,0,0,0,0,0),
v3_v1_plac_ext=c(0,0,0,0,0,0,0,-1,0,0,0,1)
), adjust=adjustment_method) # second one not changed
concon <- contrast(lincombs, list(acq_drug_plac_v2v1=c(1,0,-1,0,0,0,0,0),
ext_drug_plac_v2v1=c(0,1,0,-1,0,0,0,0),
acq_drug_plac_v3v1=c(0,0,0,0,1,0,-1,0),
ext_drug_plac_v3v1=c(0,0,0,0,0,1,0,-1)), adjust=adjustment_method)
print(summary(concon))
data<-read.csv(here::here(data_dir,  "full_beh_dataset_p3.csv"))
fields <- c("visit", "rev_type_4plot_swchp", "drug", "outcome", "id", "prepost", "sb")
data<- assign_var_types(data, fields)
data<-read.csv(here::here(data_dir,  "full_beh_dataset_p3.csv"))
fields <- c("visit", "rev_type_4plot_swchp", "drug", "outcome", "id", "sb")
data<- assign_var_types(data, fields)
data<-data[which(data$Trial_Type %in% 3),]
data<-data[which(data$trno_swchp %in% c(seq(-5, -1), seq(1,15))),]
data<-data[which(data$rev_type_4plot_swchp %in% c("acq","ext")),]
data <- data %>% mutate(prepost =
case_when(trno_swchp %in% seq(-3,-1) ~ "pre",
trno_swchp %in% seq(5, 15) ~ "post"), na.rm = TRUE)
data<-data[which(data$prepost %in% c("pre","post")),]
### Get baseline for each reversal
dfbase <- data[data$prepost %in% "pre", c("prob", "prepost", "id", "rev_id_swchp", "drug_str", "visit_str", "rev_type_4plot_swchp", "sb")]
dfbase = dfbase %>%
group_by(id, rev_id_swchp, drug_str, visit_str, rev_type_4plot_swchp, sb) %>%
summarise_at("prob", mean, na.rm = TRUE)
dfbase$prob_baseline <- dfbase$prob
dfbase <- dfbase[,c("id", "visit_str", "rev_id_swchp", "prob_baseline")]
### Get summarized data and append base
df <- data[, c("prob", "prepost", "id", "rev_id_swchp", "drug_str", "visit_str", "trno_swchp", "rev_type_4plot_swchp", "sb")]
df = df[data$prepost %in% "post",]
df <- base::merge(df, dfbase, by=c("id", "visit_str", "rev_id_swchp"))
### Subtract baseline
df$probchange <- df$prob - df$prob_baseline
dft = df %>%
group_by(id, drug_str, visit_str, rev_type_4plot_swchp, sb) %>%
summarise_at(c("probchange"), mean, na.rm = TRUE)
dft$visit_str <- mapvalues(dft$visit_str,
from = c("v1", "v2", "v3"),
to =c("Baseline Session", "Drug Session", "Follow-up Session"))
g <- ggplot(data = dft, aes(y = probchange, x = visit_str, fill=interaction(visit_str, drug_str, rev_type_4plot_swchp))) +
geom_line(aes(group = id), data=dft[dft$drug_str=="losartan" & dft$rev_type_4plot_swchp=="acq",], alpha=0.15, color=pal[1], position=position_nudge(x = -0.2)) +
geom_line(aes(group = id), data=dft[dft$drug_str=="losartan" & dft$rev_type_4plot_swchp=="ext",], alpha=0.15, color=pal[1], position=position_nudge(x = 0.1)) +
geom_line(aes(group = id), data=dft[dft$drug_str=="placebo" & dft$rev_type_4plot_swchp=="acq",], alpha=0.15, color=pal[3], position=position_nudge(x = -0.1)) +
geom_line(aes(group = id), data=dft[dft$drug_str=="placebo" & dft$rev_type_4plot_swchp=="ext",], alpha=0.15, color=pal[3], position=position_nudge(x = 0.2)) +
stat_summary(geom="line",  fun="mean", size=1.5, data=dft, aes(group=interaction(drug_str, rev_type_4plot_swchp), color=drug_str, y = probchange, x = visit_str, fill = drug_str), alpha=0.5, show.legend = FALSE,position =   position_dodge( width = 0.5)) +
geom_hline(yintercept=c(0), linetype="dashed") +
geom_point(aes(color= interaction(visit_str, drug_str, rev_type_4plot_swchp)), position =   position_jitterdodge(  jitter.width = .15,  dodge.width = 0.5), size = 2, alpha = 0.5, show.legend=FALSE) +
geom_boxplot(inherit.aes = FALSE, aes(y = probchange, x = visit_str, fill=interaction(visit_str, drug_str, rev_type_4plot_swchp)), width = .8, lwd=1.2, outlier.shape = NA, alpha = 1, show.legend=FALSE) +
stat_summary(geom="point", fun="mean", size=4, shape=23, aes(y=probchange, group=interaction(visit_str, drug_str, rev_type_4plot_swchp)), color="black",
position = position_dodge( 0.8), stroke=1.5, show.legend = FALSE) +
scale_fill_manual(values = c(pal[c(1,2,3,4,1,2,3,4,1,2,3,4, 1,3)])) +
scale_color_manual(values = c(pal[c(1,2,3,4,1,2,3,4,1,2,3,4,1,3)])) +
expand_limits(x = 3) +
theme_bw() +
raincloud_theme +
theme(legend.position = "right",
strip.text.x = element_text(size = 12,  face = "bold"),
strip.background = element_rect(color="black", fill="#ebebeb", size=0, linetype="solid")
) +
labs(y= "Baseline-corrected probability ratings", x="Threat phase")  +
scale_x_discrete(labels=c("acq" = "high", "ext" =  "low")) +
scale_y_continuous(breaks = c(-0.5,0,0.5)) #+
g
ggsave(here::here(figures_dir, "Fig2", "Figure2b_raw.pdf"), width = 7, height = 5, dpi = 120)
figures_dir
ggsave(here::here(figures_dir, "Figure2b_raw.pdf"), width = 7, height = 5, dpi = 120)
data<-read.csv(here::here(data_dir,  "full_beh_dataset_p3.csv"))
fields <- c("visit", "rev_type_4plot_swchp", "drug", "outcome", "id", "sb")
data<- assign_var_types(data, fields)
data<-read.csv(here::here(data_dir,  "full_beh_dataset_p3.csv"))
("trno_swcp" %in% colnames(data) & !("trno_swchp" %in% fields))
if ("trno_swcp" %in% colnames(data) & !("trno_swchp" %in% fields)) {
data$trno_swchp <- data2$trno_swcp
data$rev_type_4plot_swchp <- data$rev_type_4plot_swcp
}
if ("trno_swcp" %in% colnames(data) & !("trno_swchp" %in% fields)) {
data$trno_swchp <- data$trno_swcp
data$rev_type_4plot_swchp <- data$rev_type_4plot_swcp
}
data$trno_swcp - data$trno_swchp
data<-read.csv(here::here(data_dir,  "full_beh_dataset_p3.csv"))
fields <- c("visit", "rev_type_4plot_swchp", "drug", "outcome", "id", "sb")
data<- assign_var_types(data, fields)
data$trno_swcp - data$trno_swchp
data<-read.csv(here::here(data_dir,  "full_beh_dataset_p3.csv"))
fields <- c("visit", "rev_type_4plot_swchp", "drug", "outcome", "id", "sb")
data<- assign_var_types(data, fields)
data<-data[which(data$Trial_Type %in% 3),]
data<-data[which(data$trno_swchp %in% c(seq(-5, -1), seq(1,15))),]
data<-data[which(data$rev_type_4plot_swchp %in% c("acq","ext")),]
data <- data %>% mutate(prepost =
case_when(trno_swchp %in% seq(-3,-1) ~ "pre",
trno_swchp %in% seq(5, 15) ~ "post"), na.rm = TRUE)
data<-data[which(data$prepost %in% c("pre","post")),]
### Get baseline for each reversal
dfbase <- data[data$prepost %in% "pre", c("prob", "prepost", "id", "rev_id_swchp", "drug_str", "visit_str", "rev_type_4plot_swchp", "sb")]
dfbase = dfbase %>%
group_by(id, rev_id_swchp, drug_str, visit_str, rev_type_4plot_swchp, sb) %>%
summarise_at("prob", mean, na.rm = TRUE)
dfbase$prob_baseline <- dfbase$prob
dfbase <- dfbase[,c("id", "visit_str", "rev_id_swchp", "prob_baseline")]
### Get summarized data and append base
df <- data[, c("prob", "prepost", "id", "rev_id_swchp", "drug_str", "visit_str", "trno_swchp", "rev_type_4plot_swchp", "sb")]
df = df[data$prepost %in% "post",]
df <- base::merge(df, dfbase, by=c("id", "visit_str", "rev_id_swchp"))
### Subtract baseline
df$probchange <- df$prob - df$prob_baseline
dft = df %>%
group_by(id, drug_str, visit_str, rev_type_4plot_swchp, sb) %>%
summarise_at(c("probchange"), mean, na.rm = TRUE)
dft$visit_str <- mapvalues(dft$visit_str,
from = c("v1", "v2", "v3"),
to =c("Baseline Session", "Drug Session", "Follow-up Session"))
g <- ggplot(data = dft, aes(y = probchange, x = visit_str, fill=interaction(visit_str, drug_str, rev_type_4plot_swchp))) +
geom_line(aes(group = id), data=dft[dft$drug_str=="losartan" & dft$rev_type_4plot_swchp=="acq",], alpha=0.15, color=pal[1], position=position_nudge(x = -0.2)) +
geom_line(aes(group = id), data=dft[dft$drug_str=="losartan" & dft$rev_type_4plot_swchp=="ext",], alpha=0.15, color=pal[1], position=position_nudge(x = 0.1)) +
geom_line(aes(group = id), data=dft[dft$drug_str=="placebo" & dft$rev_type_4plot_swchp=="acq",], alpha=0.15, color=pal[3], position=position_nudge(x = -0.1)) +
geom_line(aes(group = id), data=dft[dft$drug_str=="placebo" & dft$rev_type_4plot_swchp=="ext",], alpha=0.15, color=pal[3], position=position_nudge(x = 0.2)) +
stat_summary(geom="line",  fun="mean", size=1.5, data=dft, aes(group=interaction(drug_str, rev_type_4plot_swchp), color=drug_str, y = probchange, x = visit_str, fill = drug_str), alpha=0.5, show.legend = FALSE,position =   position_dodge( width = 0.5)) +
geom_hline(yintercept=c(0), linetype="dashed") +
geom_point(aes(color= interaction(visit_str, drug_str, rev_type_4plot_swchp)), position =   position_jitterdodge(  jitter.width = .15,  dodge.width = 0.5), size = 2, alpha = 0.5, show.legend=FALSE) +
geom_boxplot(inherit.aes = FALSE, aes(y = probchange, x = visit_str, fill=interaction(visit_str, drug_str, rev_type_4plot_swchp)), width = .8, lwd=1.2, outlier.shape = NA, alpha = 1, show.legend=FALSE) +
stat_summary(geom="point", fun="mean", size=4, shape=23, aes(y=probchange, group=interaction(visit_str, drug_str, rev_type_4plot_swchp)), color="black",
position = position_dodge( 0.8), stroke=1.5, show.legend = FALSE) +
scale_fill_manual(values = c(pal[c(1,2,3,4,1,2,3,4,1,2,3,4, 1,3)])) +
scale_color_manual(values = c(pal[c(1,2,3,4,1,2,3,4,1,2,3,4,1,3)])) +
expand_limits(x = 3) +
theme_bw() +
raincloud_theme +
theme(legend.position = "right",
strip.text.x = element_text(size = 12,  face = "bold"),
strip.background = element_rect(color="black", fill="#ebebeb", size=0, linetype="solid")
) +
labs(y= "Baseline-corrected probability ratings", x="Threat phase")  +
scale_x_discrete(labels=c("acq" = "high", "ext" =  "low")) +
scale_y_continuous(breaks = c(-0.5,0,0.5)) #+
g
ggsave(here::here(figures_dir, "Figure2b_raw.pdf"), width = 7, height = 5, dpi = 120)
data<-read.csv(here::here(data_dir,  "full_beh_dataset_p3.csv"))
data<-data[which(data$Trial_Type %in% 3),]
data<-data[which(data$trno_swchp %in% c(seq(-5, -1), seq(1,15))),]
data<-data[which(data$rev_type_4plot_swchp %in% c("acq","ext")),]
data <- data %>% mutate(prepost =
case_when(trno_swchp %in% seq(-3,-1) ~ "pre",
trno_swchp %in% seq(5, 15) ~ "post"), na.rm = TRUE)
data<-data[which(data$prepost %in% c("pre","post")),]
fields <- c("visit", "rev_type_4plot_swchp", "drug", "outcome", "id", "prepost", "sb", "trno_swchp")
data<- assign_var_types(data, fields)
### Get baseline for each reversal
dfbase <- data[data$prepost %in% "pre", c("prob", "prepost", "id", "rev_id_swchp", "drug_str", "visit_str", "rev_type_4plot_swchp", "sb")]
dfbase = dfbase %>%
group_by(id, rev_id_swchp, drug_str, visit_str, rev_type_4plot_swchp, sb) %>%
summarise_at("prob", mean, na.rm = TRUE)
dfbase$prob_baseline <- dfbase$prob
dfbase <- dfbase[,c("id", "visit_str", "rev_id_swchp", "prob_baseline")]
### Get summarized data and append base
df <- data[, c("prob", "prepost", "id", "rev_id_swchp", "drug_str", "visit_str", "trno_swchp", "rev_type_4plot_swchp", "sb")]
df = df[data$prepost %in% "post",]
df <- base::merge(df, dfbase, by=c("id", "visit_str", "rev_id_swchp"))
### Subtract baseline
df$probchange <- df$prob - df$prob_baseline
df$probchange01 <- (df$probchange - min(df$probchange)) / (max(df$probchange) - min(df$probchange))
df$probchange01[df$probchange01==0] <- 0.0001
df$probchange01[df$probchange01==1] <- 0.9999
#f$probchange[df$rev_type_4plot_swchp %in% "ext"] = (-1)*df$probchange[df$rev_type_4plot_swchp %in% "ext"]
#df <- df[df$id %in% overids,]
## Add approx true prob
i <- 1
lvls <- c(0.75, 0.25)
for (ph in c("acq", "ext" )) {
df$truechange[df$rev_type_4plot_swchp %in% ph] <- lvls[i] - df$prob_baseline[df$rev_type_4plot_swchp %in% ph]
i <- i + 1
}
##### STATS ########################################################################
m <- lmer(data=df, probchange ~ drug_str*visit_str*rev_type_4plot_swchp + (1|sb) + (1|id))
m2 <- lmer(data=df, probchange ~ drug_str*visit_str*rev_type_4plot_swchp + (1+ visit_str + rev_type_4plot_swchp|id) + (1|sb))
df$model_pred <- predict(m2)
m3 <- lmer(data=df, probchange ~ drug_str*visit_str*rev_type_4plot_swchp + (1 + rev_type_4plot_swchp|id) + (1|sb))
m4 <- lmer(data=df, probchange ~ drug_str*visit_str*rev_type_4plot_swchp + (1+ visit_str |id) + (1|sb))
performance::compare_performance(m, m2, m3, m4)
anova(m2)
effectsize::effectsize(anova(m2), type="eta", alternative="two.sided")
em <- emmeans(m2, ~ visit_str | drug_str/rev_type_4plot_swchp, adjust=adjustment_method)
pairs(em, adjust=adjustment_method)
a<-summary(pairs(em, adjust=adjustment_method))
eff<-effectsize::t_to_eta2(t=a$t.ratio, df_error = a$df, alternative = "two.sided")
options(warn=-1)
if (!require("pacman")) install.packages("pacman")
pacman::p_load("renv", "here", "knitr")
knitr::opts_chunk$set(echo = TRUE)
here::i_am(".losartan_hidden_root")
here::here()
# renv::init()
renv::activate(here::here(""))
dir.create(here::here("output/figures/"))
data_dir = here::here('data')
utils_dir = here::here('utils' )
figures_dir = here::here('output/figures' )
adjustment_method ="holm"
#library(devtools)
#devtools::install_github("mattelisi/mlisi")
#devtools::install_github("mattelisi/bmsR")
#required_packages = c("reshape2",  "purrr", "ggpubr", "corrplot", "ggplot2", "ggsignif", "parameters", "extdplyr", "Jmisc", "PupillometryR",  "plyr", "lme4", "lmerTest", "emmeans", #"tidyr", "ggpubr", "corrplot", "patchwork", "broom", "plotrix", "PupillometryR","glmmTMB", "Hmisc", "boot", "data.table", "devtools", "bmsR", "performance", "extdplyr", "sjmisc")
#lapply(required_packages, library, character.only = TRUE)
required_packages = c("reshape2", "sjmisc", "sjPlot", "purrr", "ggpubr", "corrplot", "dplyr","ggplot2", "ggsignif", "parameters", "extdplyr", "Jmisc", "PupillometryR",  "plyr", "lme4", "lmerTest", "emmeans", "tidyr", "ggpubr", "corrplot", "patchwork", "broom", "plotrix", "PupillometryR","glmmTMB", "Hmisc", "boot", "data.table", "devtools", "bmsR", "performance", "rstan", "dplyr", "utils", "loo", "jtools", "heplots", "effectsize")
#pacman::p_load(char = required_packages)
invisible(lapply(required_packages, require, character.only = TRUE))
source(here::here("..","..", "shared_functions", "r", "r_functions.R"))
pal <- get_colors("ond")
emm_options(pbkrtest.limit = 5000)
run_descriptives <- function(df, vec) {
sdf <- df[, append("drug_str", vec)]
for (i in as.character(vec)) {
tsdf = sdf %>%
group_by(drug_str) %>%
summarise_at(i, funs(mean,sd),na.rm = TRUE)
tsdf$varname <- i
print(tsdf)
}
pvals <- sdf %>%
summarise_each(funs(t.test(.[drug_str == "losartan"], .[drug_str == "placebo"])$p.value), vars =  vec)
tscores <- sdf %>%
summarise_each(funs(t.test(.[drug_str == "losartan"], .[drug_str == "placebo"])$statistic), vars =  vec)
dfs <- sdf %>%
summarise_each(funs(t.test(.[drug_str == "losartan"], .[drug_str == "placebo"])$parameter), vars =  vec)
stats <- rbind(pvals, tscores, dfs, vec)
stats <- data.table::transpose(stats)
colnames(stats) <- c("p", "t", "df", "variable")
print(stats)
}
data<-read.csv(here::here(data_dir,  "full_beh_dataset_p3.csv"))
data<-data[which(data$Trial_Type %in% 3),]
data<-data[which(data$trno_swchp %in% c(seq(-5, -1), seq(1,15))),]
data<-data[which(data$rev_type_4plot_swchp %in% c("acq","ext")),]
data <- data %>% mutate(prepost =
case_when(trno_swchp %in% seq(-3,-1) ~ "pre",
trno_swchp %in% seq(5, 15) ~ "post"), na.rm = TRUE)
data<-data[which(data$prepost %in% c("pre","post")),]
fields <- c("visit", "rev_type_4plot_swchp", "drug", "outcome", "id", "prepost", "sb", "trno_swchp")
data<- assign_var_types(data, fields)
### Get baseline for each reversal
dfbase <- data[data$prepost %in% "pre", c("prob", "prepost", "id", "rev_id_swchp", "drug_str", "visit_str", "rev_type_4plot_swchp", "sb")]
dfbase = dfbase %>%
group_by(id, rev_id_swchp, drug_str, visit_str, rev_type_4plot_swchp, sb) %>%
summarise_at("prob", mean, na.rm = TRUE)
dfbase$prob_baseline <- dfbase$prob
dfbase <- dfbase[,c("id", "visit_str", "rev_id_swchp", "prob_baseline")]
### Get summarized data and append base
df <- data[, c("prob", "prepost", "id", "rev_id_swchp", "drug_str", "visit_str", "trno_swchp", "rev_type_4plot_swchp", "sb")]
df = df[data$prepost %in% "post",]
df <- base::merge(df, dfbase, by=c("id", "visit_str", "rev_id_swchp"))
### Subtract baseline
df$probchange <- df$prob - df$prob_baseline
df$probchange01 <- (df$probchange - min(df$probchange)) / (max(df$probchange) - min(df$probchange))
df$probchange01[df$probchange01==0] <- 0.0001
df$probchange01[df$probchange01==1] <- 0.9999
#f$probchange[df$rev_type_4plot_swchp %in% "ext"] = (-1)*df$probchange[df$rev_type_4plot_swchp %in% "ext"]
#df <- df[df$id %in% overids,]
## Add approx true prob
i <- 1
lvls <- c(0.75, 0.25)
for (ph in c("acq", "ext" )) {
df$truechange[df$rev_type_4plot_swchp %in% ph] <- lvls[i] - df$prob_baseline[df$rev_type_4plot_swchp %in% ph]
i <- i + 1
}
##### STATS ########################################################################
m <- lmer(data=df, probchange ~ drug_str*visit_str*rev_type_4plot_swchp + (1|sb) + (1|id))
m2 <- lmer(data=df, probchange ~ drug_str*visit_str*rev_type_4plot_swchp + (1+ visit_str + rev_type_4plot_swchp|id) + (1|sb))
df$model_pred <- predict(m2)
m3 <- lmer(data=df, probchange ~ drug_str*visit_str*rev_type_4plot_swchp + (1 + rev_type_4plot_swchp|id) + (1|sb))
m4 <- lmer(data=df, probchange ~ drug_str*visit_str*rev_type_4plot_swchp + (1+ visit_str |id) + (1|sb))
performance::compare_performance(m, m2, m3, m4)
anova(m2)
effectsize::effectsize(anova(m2), type="eta", alternative="two.sided")
em <- emmeans(m2, ~ visit_str | drug_str/rev_type_4plot_swchp, adjust=adjustment_method)
pairs(em, adjust=adjustment_method)
a<-summary(pairs(em, adjust=adjustment_method))
eff<-effectsize::t_to_eta2(t=a$t.ratio, df_error = a$df, alternative = "two.sided")
a
install.packages("pbkrtest")
install.packages("/home/ondrej/Downloads/r_packages/pbkrtest_0.4-8.6.tar.gz", repos = NULL, type = "source")
options(warn=-1)
if (!require("pacman")) install.packages("pacman")
pacman::p_load("renv", "here", "knitr")
knitr::opts_chunk$set(echo = TRUE)
here::i_am(".losartan_hidden_root")
here::here()
# renv::init()
renv::activate(here::here(""))
dir.create(here::here("output/figures/"))
data_dir = here::here('data')
utils_dir = here::here('utils' )
figures_dir = here::here('output/figures' )
adjustment_method ="holm"
here::here()
# renv::init()
renv::activate(here::here(""))
#library(devtools)
#devtools::install_github("mattelisi/mlisi")
#devtools::install_github("mattelisi/bmsR")
#required_packages = c("reshape2",  "purrr", "ggpubr", "corrplot", "ggplot2", "ggsignif", "parameters", "extdplyr", "Jmisc", "PupillometryR",  "plyr", "lme4", "lmerTest", "emmeans", #"tidyr", "ggpubr", "corrplot", "patchwork", "broom", "plotrix", "PupillometryR","glmmTMB", "Hmisc", "boot", "data.table", "devtools", "bmsR", "performance", "extdplyr", "sjmisc")
#lapply(required_packages, library, character.only = TRUE)
required_packages = c("reshape2", "sjmisc", "sjPlot", "purrr", "ggpubr", "corrplot", "dplyr","ggplot2", "ggsignif", "parameters", "extdplyr", "Jmisc", "PupillometryR",  "plyr", "lme4", "lmerTest", "emmeans", "tidyr", "ggpubr", "corrplot", "patchwork", "broom", "plotrix", "PupillometryR","glmmTMB", "Hmisc", "boot", "data.table", "devtools", "bmsR", "performance", "rstan", "dplyr", "utils", "loo", "jtools", "heplots", "effectsize", "pbkrtest")
#pacman::p_load(char = required_packages)
invisible(lapply(required_packages, require, character.only = TRUE))
source(here::here("..","..", "shared_functions", "r", "r_functions.R"))
pal <- get_colors("ond")
emm_options(pbkrtest.limit = 5000)
run_descriptives <- function(df, vec) {
sdf <- df[, append("drug_str", vec)]
for (i in as.character(vec)) {
tsdf = sdf %>%
group_by(drug_str) %>%
summarise_at(i, funs(mean,sd),na.rm = TRUE)
tsdf$varname <- i
print(tsdf)
}
pvals <- sdf %>%
summarise_each(funs(t.test(.[drug_str == "losartan"], .[drug_str == "placebo"])$p.value), vars =  vec)
tscores <- sdf %>%
summarise_each(funs(t.test(.[drug_str == "losartan"], .[drug_str == "placebo"])$statistic), vars =  vec)
dfs <- sdf %>%
summarise_each(funs(t.test(.[drug_str == "losartan"], .[drug_str == "placebo"])$parameter), vars =  vec)
stats <- rbind(pvals, tscores, dfs, vec)
stats <- data.table::transpose(stats)
colnames(stats) <- c("p", "t", "df", "variable")
print(stats)
}
install.pacakges("loo")
install.packages("loo")
install.packages("rstan")
# renv::init()
renv::snapshot()
install.packages("/home/ondrej/Downloads/r_packages/pbkrtest_0.4-8.6.tar.gz", repos = NULL, type = "source")
# renv::init()
#renv::snapshot()
renv::activate(here::here(""))
install.packages("pbkrtest")
install.packages("/home/ondrej/Downloads/r_packages/pbkrtest_0.4-7.tar.gz", repos = NULL, type = "source")
remotes::install_github("hojsgaard/pbkrtest", build_vignettes = TRUE)
install.packages("/home/ondrej/Downloads/r_packages/pbkrtest_0.4-7.tar.gz", repos = NULL, type = "source")
install.packages("pbkrtest", repos = "https://cran.r-project.org", version = "0.4-8")
